bps (160/120)

-- future ade:3

d1 $ whenmod 12 10 (trunc 0.25) $
every 5 (gap 4) $
every 6 (chop 4 ) $
every 7 (rev) $
every 10 (# coarse "16 32 64") $
every 11 (# accelerate "-1 1") $
every 8 (chop "<16 128 32 8 16>") $
every 9 (# speed "1.1 1.2 -1 1.3") $
whenmod 8 6 (jux (iter 8)) $
foldEvery [3, 4] (0.25 <~) $
slowspread ($) [id, rev, (|+| crush "-5 7 3 -4"), (|+| pan (slow 2 sine1)), (|+| speed "0.5") . slow (4/3), iter 4] $
whenmod 16 12 (const $ stack [
sound "{[~ future:10]*2 ~ ~}%4",
sound "{future:9 ~ ~}%16",
sound "chin*8 chin:1",
sound "{future:4 ~ ~}%16" # cut "1",
sound "{diphone ~ ~}%8" # cut "2" # end "0.3" # delay "0.3" # speed "1.1"
]) $
stack [
whenmod 7 4 (const $ sound "~") $ sound (samples "~ {future:7 ~ ~}%8 ~ ~" (run 20)) # cut "6",
rarely (# speed "0.25") $ slow 2 $ sound (samples "[ade:3*2 abe:3*2]/8" (slow 1.5 $ run 4)) # speed "0.5",
slow 2 $ sound "saw(3, 8)" # speed "0.5" # cut "3" # delay "0.5" # cutoff "0.1" # resonance "0.1",
whenmod 5 3 ( jux (iter 4)) $ stut' 8 (0.125/2) (# gain "0.8") $ sound "~ future" # speed "4",
sometimes (density 2) $ sound (samples "future:2*16?" (density 1.25 $ run 15)) # cut "1" # speed "[1 2]*3",
sound "chin*8" # gain "0.8",
density 2 $ sound "future:10*4? future:5",
sometimes (stut' 4 (0.125) ((# gain "0.9") . (# speed "0.9"))) $ sound "~ future:3",
sometimes (stut' 4 (0.125/2) ((# speed "0.9") . (# gain "0.8"))) $ sound "~ future:7 [~ future:8] ~"
]
# delaytime "0.5"
# delayfeedback "0.5"

hush
