d1 $ sound "arpy*8" # up (run 8)

d1 $ up (run 8) # sound "arpy*8"

d1 $ sound "arpy*8" # up (every 4 (rev) $ run 8)

d1 $ sound "arpy:0 arpy:2 arpy:3"

d1 $ n "0 2 3" # s "arpy"

d1 $ sound "drum:0 drum:1 drum:2 drum:3"

d1 $ sound $ samples "drum*4" "0 1 2 3"

d1 $ sound $ samples "drum*4" (run 4)

d1 $ n (run 4) # s "drum"

d1 $ s $ samples "drum arpy cp hh" "6 5 5 8"

d1 $ s $ samples "drum arpy cp hh" (run 10)

d1 $ n (run 10) # s "drum arpy cp hh"

d1 $ s (samples "drum arpy cp hh" (run 10)) # pan (slow 8 $ saw)

d1 $ s (samples "drum arpy cp hh" (run 10)) # pan "0 1 0.25"

d1 $ s (samples "drum arpy cp hh" (run 10)) # pan sine

d1 $ s $ samples "drum arpy cp hh" "0 0 0 0"

d1 $ s (samples "drum arpy cp hh" (run 10)) # pan (slow 4 $ sine)

d1 $ s (samples "drum arpy cp hh" (run 10)) # pan (slow 8 "[0 2 4]")

d1 $ s (samples "drum arpy cp hh" (run 10)) # pan (slow 8 $ saw)

d1 $ s (samples "drum arpy cp hh" (run 10)) # pan (slow 8 $ tri)

d1 $ s (samples "drum arpy cp hh" (run 10)) # pan (slow 4 $ square)

d1 $ s (samples "drum arpy cp hh" (run 10)) # pan (density 1.75 $ tri)

d1 $ s (samples "drum arpy cp hh" "0 3 0 13") # speed (density 4 2)

d1 $ s (samples "drum arpy cp hh" (run 10)) # pan (slowcat [sine, saw, square, tri])

d1 $ s (samples "drum arpy cp hh" (run 10)) # speed ((scale 0.5 3 sine) + (slow 4 saw))

d1 $ s (samples "drum arpy cp hh" (run 10)) # speed (scale 1 3 $ tri)

d1 $ s (samples "drum arpy cp hh" (run 10)) # speed (slow 4 $ scale 1 3 $ tri)

d1 $ s (samples "drum arpy cp hh" (run 10)) # speed (scale (-1) 3 $ tri)

d1 $ s (samples "drum arpy cp hh" (run 10)) # speed (slow 4 $ scale (1) 2 $ tri)

d1 $ s (samples "drum arpy cp hh" (run 10)) # cutoff (scale 300 1000 $ slow 4 $ square)
# resonance "0.4"

d1 $ s (samples "{drum drum arpy cp cp hh}" (run 10))

d1 $ s (samples "{~ ~ ~ ~, drum arpy cp hh}" (run 10))

d1 $ s (samples "{drum drum arpy arpy cp cp hh hh}%4" (run 10))

d1 $ (0.25 <~) $ s (samples "drum arpy cp hh" (run 10))

d1 $ (0.25 ~>) $ s (samples "{drum arpy cp hh}%8" (run 10))

d1 $ (0.25 <~) $ s (samples "{drum arpy cp hh}%8" (run 10))

d1 $ every 3 (0.25 <~) $ s (samples "drum arpy cp hh" (run 10))

d1 $ every 3 (0.25 <~) $ s (samples "{drum arpy cp hh}%8" (run 10))

d1 $ every 3 (0.25 <~) $ s (samples "{drum arpy cp hh}%8" (run 10)) # cutoff (scale 500 5000 $ slow 4 $ sine)

d1 $ "[0 0.25]/4" <~ s (samples "{drum arpy cp hh}%8" (run 10)) # cutoff (scale 3000 8000 $ slow 4 $ sine) # pan (rand)

d1 $ s (samples "drum arpy cp hh" (run 10)) # pan (rand)

d1 $ s (samples "drum arpy cp hh" (run 10)) # pan (scale 0.25 0.75 $ rand)

d1 $ s "drum*8" # n (irand 30)

d1 $ (0.25 <~) $ s (samples "{drum, arpy, cp hh}%8" (run 10)) # n (irand 30) # pan (scale 0.25 0.75 $ rand)

d1 $ every 3 (0.125 <~) $ "[0 0.25]/4" <~ s (samples "{drum, arpy, cp hh}%8" (run 10)) # n (irand 30) # pan (scale 0.25 0.75 $ rand)

d1 $ every 3 (0.125 <~) $ "[0 0.25]/4" <~ s (samples "{drum, arpy, cp hh}%8" (run 10)) # n (irand 30) # pan (scale 0.25 0.75 $ rand) # cutoff (scale 500 5000 $ slow 4 $ sine)

d1 $ s (samples "{drum arpy cp hh}%8?" (run 10)) # n (irand 30)

d1 $ sometimesBy 0.25 (# crush 4) $ s (samples "{drum, arpy cp, hh}%8" (run 10)) # n (irand 30)

d1 $ sometimesBy 0.25 (# speed (irand 10)) $ s (samples "{drum, arpy cp, hh}%8" (run 10)) # n (irand 30)

d1 $ sometimes (# speed (irand 10)) $ s (samples "{drum, arpy cp, hh}%8" (run 10)) # n (irand 30)

d1 $ often (# speed (irand 10)) $ s (samples "{drum, arpy cp, hh}%8" (run 10)) # n (irand 30)

d1 $ rarely (# speed (irand 10)) $ s (samples "{drum, arpy cp, hh}%8" (run 10)) # n (irand 30)

d1 $ almostNever (# speed (irand 10)) $ s (samples "{drum, arpy cp, hh}%8" (run 10)) # n (irand 30)

d1 $ almostAlways (# speed (irand 10)) $ s (samples "{drum, arpy cp, hh}%8" (run 10)) # n (irand 30)

d1 $ whenmod 8 6 (rev) $ every 5 (|+| speed "0.5") $ every 4 (0.25 <~) $ every 3 (rev) $ "[0 0.5]/4" <~ s (samples "{drum, arpy cp hh}%8" (run 10)) # n (irand 30) # speed "[1 1.25 0.75 -1.5]/3" # pan (slow 4 $ tri)

d1 $ whenmod 8 6 (const $ s (samples "{drum, arpy cp hh}%8" (run 10)) # n (irand 30)) $ whenmod 8 6 (rev) $ every 5 (|+| speed "0.5") $ every 4 (0.25 <~) $ every 3 (rev) $ "[0 0.5]/4" <~ s (samples "{drum, arpy cp hh}%8" (run 10)) # n (irand 30) # speed "[1 1.25 0.75 -1.5]/3" # pan (slow 4 $ tri)

d1 $ const (sound "arpy*3") $ sound "drum arpy cp hh"

d1 $ whenmod 8 6 (const $ s "arpy(3,8)") $ sound "drum arpy cp hh"

d1 $ fastcat [
sound "bd sn:2" # vowel "[a o]/2",
sound "casio casio:1 casio:2*2",
sound "drum drum:2 drum:3 drum:4*2"
]

d1 $ cat [
sound "bd sn:2" # vowel "[a o]/2",
sound "casio casio:1 casio:2*2",
sound "drum drum:2 drum:3 drum:4*2"
]

d1 $ stack [
sound "bd sn:2" # vowel "[a o]/2",
sound "casio casio:1 casio:2*2",
sound (samples "arpy*8" (run 16))
]

d1 $ every 4 (slow 2) $ whenmod 5 3 (# speed "0.75 1.5") $ stack [
sound "bd sn:2" # vowel "[a o]/2",
sound "casio casio:1 casio:2*2",
sound (samples "arpy*8" (run 16))
]

d1 $ n "0 3 7 11 12 16 19 23" # s "superpiano" # gain "0.9" # velocity "0.4 0.2 0.4 0.5" # voice (slow 4 "0.3 0.2 0.1 0.0 0.2") # slide "[0 0.1]/8" # speed "-2"

d1 $ sometimesBy 0.75 (# crush (irand 4)) $
every 3 (rev) $
every 4 (# speed (irand 5)) $
stack [
sometimesBy 0.75 (# speed (irand 10))$ "[0 0.25]/4" <~ s (samples "{drum arpy cp hh}%8" (run 10)) # n (irand 30) # delay "0.5" # pan (slow 4 $ sine),
(0.25 <~) $ s (samples "{drum arpy cp hh}%4" (run 10)),
every 4 (# speed (irand 20)) $ s (samples "{drum arpy cp hh}%8" (run 10)) # voice "[0.5 0]/8" # sustain "1 0.25 2 1",
jux (# accelerate "-0.1") $ whenmod 8 6 (const $ s "arpy(3, 8)") $ s (samples "casio arpy cp sn" (run 10)) # n (irand 30) # pan (slow 4 $ saw),
whenmod 8 6 (const $ s "{drum, arpy cp hh}%8") $ "[0 0.25]" <~ s (samples "{future, future:2 future:3 future:4}%8" (run 30)) # n (irand 30) # pan (scale 1 3  $ slow 4 $ sine),
n (slow 2 $ (run 8) * 7 + 50) # s "supersaw" # midinote "[80!6 78]/8" # sustain "1 0.25 2 1" # gain "0.75 0 0.75 0" # delay "0.5 0.75 0.5 0" # cutoff (scale 500 1000 $ slow 8 $ sine) # pan (scale 1 2 $ slow 4 $ sine),
]

hush
